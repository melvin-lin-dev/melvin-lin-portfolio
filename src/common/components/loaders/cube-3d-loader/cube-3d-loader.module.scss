$cube-size: 3.125em;
$half-cube: $cube-size / 2;
$animation-duration: 0.6s;
$animation-timing: cubic-bezier(0.45, 0.03, 0.51, 0.95);

$cube-colors: (
    (
        main: #166534,
        light: #86efac,
        dark: #22c55e,
    ),
    (
        main: #047857,
        light: #6ee7b7,
        dark: #10b981,
    ),
    (
        main: #0f766e,
        light: #5eead4,
        dark: #14b8a6,
    ),
    (
        main: #115e59,
        light: #a5f3fc,
        dark: #2dd4bf,
    ),
    (
        main: #075985,
        light: #67e8f9,
        dark: #06b6d4,
    ),
    (
        main: #0e7490,
        light: #a5f3fc,
        dark: #22d3ee,
    )
);

.cubes {
    position: absolute;
    top: 50%;
    left: 50%;
    transform-style: preserve-3d;

    &.loop {
        transform: rotateX(-25deg) rotateY(-45deg) translateZ($half-cube);

        @keyframes scaleCube {
            to {
                transform: scale3d(0.2, 0.2, 0.2);
            }
        }

        .item {
            margin: -$half-cube;
            width: $cube-size;
            height: $cube-size;
            transform-origin: 50% 50% #{-$half-cube};
            box-shadow: 0 0 0.125em currentColor;
            background: currentColor;
            animation: scaleCube $animation-duration $animation-timing infinite alternate;

            &:before,
            &:after {
                position: absolute;
                width: inherit;
                height: inherit;
                transform-origin: 0 100%;
                box-shadow: inherit;
                background: currentColor;
                content: "";
            }

            &:before {
                bottom: 100%;
                transform: rotateX(90deg);
            }
            &:after {
                left: 100%;
                transform: rotateY(90deg);
            }
        }

        @for $i from 1 through length($cube-colors) {
            $c: nth($cube-colors, $i);
            .item:nth-child(#{$i}) {
                margin-left: 6.25em - ($i - 1) * 3.125em;
                animation-delay: -0.2s * (7 - $i);
                color: map-get($c, main);
                &:before {
                    color: map-get($c, light);
                }
                &:after {
                    color: map-get($c, dark);
                }
            }
        }
    }
}
